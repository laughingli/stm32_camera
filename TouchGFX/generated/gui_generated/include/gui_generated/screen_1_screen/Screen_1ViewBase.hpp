/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_1VIEWBASE_HPP
#define SCREEN_1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_1_screen/Screen_1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>

class Screen_1ViewBase : public touchgfx::View<Screen_1Presenter>
{
public:
    Screen_1ViewBase();
    virtual ~Screen_1ViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void transitionBegins();

    /*
     * Custom Actions
     */
    virtual void changeScreenRight();
    virtual void changeScreenDown();

    /*
     * Virtual Action Handlers
     */
    virtual void updateEvents()
    {
        // Override and implement this function in Screen_1
    }
    virtual void screenInit()
    {
        // Override and implement this function in Screen_1
    }
    virtual void checkI2CStatus()
    {
        // Override and implement this function in Screen_1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Logo_BG;
    touchgfx::TextAreaWithOneWildcard EV_Text;
    touchgfx::Image Banner;
    touchgfx::TextArea ER_Text;
    touchgfx::TextArea Bar_Text_0;
    touchgfx::TextArea Bar_Text_0_10;
    touchgfx::TextArea Kev_Text;
    touchgfx::TextArea PC_Text;
    touchgfx::BoxProgress PC_Progress;

    /*
     * Wildcard Buffers
     */
    static const uint16_t EV_TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar EV_TextBuffer[EV_TEXT_SIZE];

private:

};

#endif // SCREEN_1VIEWBASE_HPP
