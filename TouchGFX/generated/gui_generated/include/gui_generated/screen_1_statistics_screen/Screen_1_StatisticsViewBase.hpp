/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_1_STATISTICSVIEWBASE_HPP
#define SCREEN_1_STATISTICSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_1_statistics_screen/Screen_1_StatisticsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterARGB8888.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen_1_StatisticsViewBase : public touchgfx::View<Screen_1_StatisticsPresenter>
{
public:
    Screen_1_StatisticsViewBase();
    virtual ~Screen_1_StatisticsViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void transitionBegins();

    /*
     * Custom Actions
     */
    virtual void Change_Screen_Up();
    virtual void Change_Screen_Right();

    /*
     * Virtual Action Handlers
     */
    virtual void updateGraph()
    {
        // Override and implement this function in Screen_1_Statistics
    }
    virtual void screenInit()
    {
        // Override and implement this function in Screen_1_Statistics
    }
    virtual void checkI2CStatus()
    {
        // Override and implement this function in Screen_1_Statistics
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image BG_2;
    touchgfx::Image BG_1;
    touchgfx::Image BG_Small;
    touchgfx::Image Line;
    touchgfx::Image Banner;
    touchgfx::GraphWrapAndClear<100> AFK_Graph;
    touchgfx::GraphLabelsY AFK_GraphMajorYAxisLabel;
    touchgfx::GraphElementLine AFK_GraphLine1;
    touchgfx::PainterARGB8888 AFK_GraphLine1Painter;
    touchgfx::GraphWrapAndClear<100> Events_Graph;
    touchgfx::GraphLabelsY Events_GraphMajorYAxisLabel;
    touchgfx::GraphElementLine Events_GraphLine1;
    touchgfx::PainterARGB8888 Events_GraphLine1Painter;
    touchgfx::TextAreaWithOneWildcard EV_Text;
    touchgfx::TextArea Stat_Text;
    touchgfx::TextAreaWithOneWildcard Flicker_Text;
    touchgfx::TextArea PEC_Stat_Text;
    touchgfx::TextArea PC_Text;
    touchgfx::TextArea ER_Text;
    touchgfx::TextArea Kev_Text;
    touchgfx::TextArea Flkr_Text;
    touchgfx::TextArea Ratio_Text;

    /*
     * Wildcard Buffers
     */
    static const uint16_t EV_TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar EV_TextBuffer[EV_TEXT_SIZE];
    static const uint16_t FLICKER_TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar Flicker_TextBuffer[FLICKER_TEXT_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4080;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SCREEN_1_STATISTICSVIEWBASE_HPP
