/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_3_lt_screen/Screen_3_LTViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen_3_LTViewBase::Screen_3_LTViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 272, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Logo_BG.setXY(0, 0);
    Logo_BG.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
    add(Logo_BG);

    R5_Text.setPosition(45, 104, 183, 19);
    R5_Text.setColor(touchgfx::Color::getColorFromRGB(216, 223, 236));
    R5_Text.setLinespacing(0);
    R5_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4VP2));
    add(R5_Text);

    GenX320_Logo.setXY(0, 0);
    GenX320_Logo.setBitmap(touchgfx::Bitmap(BITMAP_SCREEN_3_NEW_ID));
    add(GenX320_Logo);

    horizontalLine.setPosition(0, 160, 272, 320);
    horizontalLinePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    horizontalLine.setPainter(horizontalLinePainter);
    horizontalLine.setStart(0, 0);
    horizontalLine.setEnd(272, 0);
    horizontalLine.setLineWidth(2);
    horizontalLine.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(horizontalLine);

    verticalLine.setPosition(0, 160, 272, 320);
    verticalLinePainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    verticalLine.setPainter(verticalLinePainter);
    verticalLine.setStart(0, 0);
    verticalLine.setEnd(0, 320);
    verticalLine.setLineWidth(2);
    verticalLine.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(verticalLine);

    image1.setXY(166, 21);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RISC_V_ID));
    add(image1);
}

Screen_3_LTViewBase::~Screen_3_LTViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen_3_LTViewBase::setupScreen()
{

}

void Screen_3_LTViewBase::changeScreenLeft()
{
    //changeScreenLeftInt
    //When changeScreenLeft is called change screen to Screen_2
    //Go to Screen_2 with no screen transition
    application().gotoScreen_2ScreenNoTransition();
}

void Screen_3_LTViewBase::afterTransition()
{
    //screenInitInt
    //When screen transition ends call virtual function
    //Call screenInit
    screenInit();
}

void Screen_3_LTViewBase::handleTickEvent()
{
    //updateCoordinatesInt
    //When every N tick call virtual function
    //Call updateCoordinates
    updateCoordinates();

    //checkI2CStatusInt
    //When every N tick call virtual function
    //Call checkI2CStatus
    checkI2CStatus();
}
