/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_1_statistics_screen/Screen_1_StatisticsViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen_1_StatisticsViewBase::Screen_1_StatisticsViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 272, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BG_2.setXY(0, 300);
    BG_2.setBitmap(touchgfx::Bitmap(BITMAP_GRAPH_BG_ID));
    add(BG_2);

    BG_1.setXY(0, 120);
    BG_1.setBitmap(touchgfx::Bitmap(BITMAP_GRAPH_BG_ID));
    add(BG_1);

    BG_Small.setXY(0, 0);
    BG_Small.setBitmap(touchgfx::Bitmap(BITMAP_BG_SMALL_ID));
    add(BG_Small);

    Line.setXY(0, 299);
    Line.setBitmap(touchgfx::Bitmap(BITMAP_FILLER_2_ID));
    add(Line);

    Banner.setXY(0, 0);
    Banner.setBitmap(touchgfx::Bitmap(BITMAP_SCREEN_2_ID));
    add(Banner);

    AFK_Graph.setPosition(0, 301, 272, 179);
    AFK_Graph.setScale(1);
    AFK_Graph.setGraphAreaMargin(37, 35, 0, 5);
    AFK_Graph.setGraphAreaPadding(6, 6, 6, 6);
    AFK_Graph.setGraphRangeY(0, 100);
    AFK_GraphMajorYAxisLabel.setInterval(10);
    AFK_GraphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_5QQ6));
    AFK_GraphMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    AFK_GraphMajorYAxisLabel.setScale(1);
    AFK_Graph.addLeftElement(AFK_GraphMajorYAxisLabel);

    AFK_GraphLine1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 143, 108));
    AFK_GraphLine1.setPainter(AFK_GraphLine1Painter);
    AFK_GraphLine1.setLineWidth(2);
    AFK_Graph.addGraphElement(AFK_GraphLine1);


    add(AFK_Graph);

    Events_Graph.setPosition(0, 120, 272, 180);
    Events_Graph.setScale(1);
    Events_Graph.setGraphAreaMargin(37, 43, 0, 5);
    Events_Graph.setGraphAreaPadding(6, 6, 6, 6);
    Events_Graph.setGraphRangeY(0, 5000);
    Events_GraphMajorYAxisLabel.setInterval(1000);
    Events_GraphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_FTOT));
    Events_GraphMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    Events_GraphMajorYAxisLabel.setScale(1);
    Events_Graph.addLeftElement(Events_GraphMajorYAxisLabel);

    Events_GraphLine1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 143, 108));
    Events_GraphLine1.setPainter(Events_GraphLine1Painter);
    Events_GraphLine1.setLineWidth(2);
    Events_Graph.addGraphElement(Events_GraphLine1);

    add(Events_Graph);

    EV_Text.setPosition(130, 141, 39, 15);
    EV_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    EV_Text.setLinespacing(0);
    Unicode::snprintf(EV_TextBuffer, EV_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6OE1).getText());
    EV_Text.setWildcard(EV_TextBuffer);
    EV_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8DAW));
    add(EV_Text);

    Stat_Text.setXY(94, 306);
    Stat_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    Stat_Text.setLinespacing(0);
    Stat_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8NTR));
    add(Stat_Text);

    Flicker_Text.setPosition(151, 321, 35, 15);
    Flicker_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    Flicker_Text.setLinespacing(0);
    Unicode::snprintf(Flicker_TextBuffer, FLICKER_TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HTGK).getText());
    Flicker_Text.setWildcard(Flicker_TextBuffer);
    Flicker_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7UF1));
    add(Flicker_Text);

    PEC_Stat_Text.setXY(52, 126);
    PEC_Stat_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    PEC_Stat_Text.setLinespacing(0);
    PEC_Stat_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4HLV));
    add(PEC_Stat_Text);

    PC_Text.setXY(61, 84);
    PC_Text.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    PC_Text.setLinespacing(0);
    PC_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EG9S));
    add(PC_Text);

    ER_Text.setXY(70, 141);
    ER_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    ER_Text.setLinespacing(0);
    ER_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7SB));
    add(ER_Text);

    Kev_Text.setXY(171, 141);
    Kev_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    Kev_Text.setLinespacing(0);
    Kev_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9NGJ));
    add(Kev_Text);

    Flkr_Text.setXY(83, 321);
    Flkr_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    Flkr_Text.setLinespacing(0);
    Flkr_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V02W));
    add(Flkr_Text);

    Ratio_Text.setXY(186, 321);
    Ratio_Text.setColor(touchgfx::Color::getColorFromRGB(64, 126, 201));
    Ratio_Text.setLinespacing(0);
    Ratio_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LV3O));
    add(Ratio_Text);
}

Screen_1_StatisticsViewBase::~Screen_1_StatisticsViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen_1_StatisticsViewBase::setupScreen()
{
    transitionBegins();
}

void Screen_1_StatisticsViewBase::handleTickEvent()
{
    //updateGraphInt
    //When every N tick call virtual function
    //Call updateGraph
    updateGraph();

    //checkI2CStatusInt
    //When every N tick call virtual function
    //Call checkI2CStatus
    checkI2CStatus();
}

void Screen_1_StatisticsViewBase::Change_Screen_Up()
{
    //changeScreenUpInt
    //When Change_Screen_Up is called change screen to Screen_1
    //Go to Screen_1 with no screen transition
    application().gotoScreen_1ScreenNoTransition();
}

void Screen_1_StatisticsViewBase::Change_Screen_Right()
{
    //changeScreenRightInt
    //When Change_Screen_Right is called change screen to Screen_1_LP_Statistics
    //Go to Screen_1_LP_Statistics with no screen transition
    application().gotoScreen_1_LP_StatisticsScreenNoTransition();
}

void Screen_1_StatisticsViewBase::transitionBegins()
{
    //screenInitInt
    //When screen transition begins call virtual function
    //Call screenInit
    screenInit();
}
