/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_2_pm2_screen/Screen_2_PM2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen_2_PM2ViewBase::Screen_2_PM2ViewBase()
{
    __background.setPosition(0, 0, 272, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Outer_Box.setPosition(0, 164, 272, 272);
    Outer_Box.setColor(touchgfx::Color::getColorFromRGB(30, 37, 52));
    Outer_Box.setBorderColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Outer_Box.setBorderSize(5);
    add(Outer_Box);

    Counter_11.setPosition(6, 300, 65, 65);
    Counter_11.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_11.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_11.setBorderSize(1);
    add(Counter_11);

    Counter_10.setPosition(71, 300, 65, 65);
    Counter_10.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_10.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_10.setBorderSize(1);
    add(Counter_10);

    Counter_8.setPosition(201, 300, 65, 65);
    Counter_8.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_8.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_8.setBorderSize(1);
    add(Counter_8);

    Counter_9.setPosition(136, 300, 65, 65);
    Counter_9.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_9.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_9.setBorderSize(1);
    add(Counter_9);

    Counter_13.setPosition(136, 365, 65, 65);
    Counter_13.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_13.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_13.setBorderSize(1);
    add(Counter_13);

    Counter_12.setPosition(201, 365, 65, 65);
    Counter_12.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_12.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_12.setBorderSize(1);
    add(Counter_12);

    Counter_14.setPosition(71, 365, 65, 65);
    Counter_14.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_14.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_14.setBorderSize(1);
    add(Counter_14);

    Counter_15.setPosition(6, 365, 65, 65);
    Counter_15.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_15.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_15.setBorderSize(1);
    add(Counter_15);

    Counter_7.setPosition(6, 235, 65, 65);
    Counter_7.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_7.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_7.setBorderSize(1);
    add(Counter_7);

    Counter_6.setPosition(71, 235, 65, 65);
    Counter_6.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_6.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_6.setBorderSize(1);
    add(Counter_6);

    Counter_4.setPosition(201, 235, 65, 65);
    Counter_4.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_4.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_4.setBorderSize(1);
    add(Counter_4);

    Counter_5.setPosition(136, 235, 65, 65);
    Counter_5.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_5.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_5.setBorderSize(1);
    add(Counter_5);

    Counter_1.setPosition(136, 170, 65, 65);
    Counter_1.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_1.setBorderSize(1);
    add(Counter_1);

    Counter_0.setPosition(201, 170, 65, 65);
    Counter_0.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_0.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_0.setBorderSize(1);
    add(Counter_0);

    Counter_2.setPosition(71, 170, 65, 65);
    Counter_2.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_2.setBorderSize(1);
    add(Counter_2);

    Counter_3.setPosition(6, 170, 65, 65);
    Counter_3.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    Counter_3.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Counter_3.setBorderSize(1);
    add(Counter_3);

    Filler_1.setXY(0, 120);
    Filler_1.setBitmap(touchgfx::Bitmap(BITMAP_FILLER_4_ID));
    add(Filler_1);

    Filler_2.setXY(0, 436);
    Filler_2.setBitmap(touchgfx::Bitmap(BITMAP_FILLER_4_ID));
    add(Filler_2);

    Inst.setXY(15, 136);
    Inst.setBitmap(touchgfx::Bitmap(BITMAP_WAVE_FROM_LEFT_TO_RIGHT_TO_WAKE_UP_THE_SYSTEM_ID));
    add(Inst);

    Awake.setXY(0, 127);
    Awake.setBitmap(touchgfx::Bitmap(BITMAP_GROUP_13_ID));
    Awake.setAlpha(0);
    add(Awake);

    BG_Small.setXY(0, 0);
    BG_Small.setBitmap(touchgfx::Bitmap(BITMAP_BG_SMALL_ID));
    add(BG_Small);

    PC_Text.setXY(61, 84);
    PC_Text.setColor(touchgfx::Color::getColorFromRGB(193, 207, 221));
    PC_Text.setLinespacing(0);
    PC_Text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IDYB));
    add(PC_Text);

    Banner.setXY(0, 0);
    Banner.setBitmap(touchgfx::Bitmap(BITMAP_SCREEN_2_ID));
    add(Banner);
}

Screen_2_PM2ViewBase::~Screen_2_PM2ViewBase()
{

}

void Screen_2_PM2ViewBase::setupScreen()
{
    transitionBegins();
}

void Screen_2_PM2ViewBase::handleTickEvent()
{
    //lowPowerModeInt
    //When every N tick call virtual function
    //Call lowPowerMode
    lowPowerMode();

    //readLPWInt
    //When every N tick call virtual function
    //Call readLPW
    readLPW();

    //checkI2CStatusInt
    //When every N tick call virtual function
    //Call checkI2CStatus
    checkI2CStatus();
}

void Screen_2_PM2ViewBase::transitionBegins()
{
    //screenInitInt
    //When screen transition begins call virtual function
    //Call screenInit
    screenInit();
}

void Screen_2_PM2ViewBase::changeScreenToModeSelection()
{
    //changeScreen2Int
    //When changeScreenToModeSelection is called change screen to Screen_2
    //Go to Screen_2 with no screen transition
    application().gotoScreen_2ScreenNoTransition();
}
